//Executed in MySQL 8.0.2

SIMPLE:
desc laws;
select * from drug_varieties;
update treatment set cost=10000 where duration='45 days';
alter table unwanted add useless int;
alter table unwanted drop column useless;
delete from disorders where disorder_name='Ataxia';
create table var_category(Variety_number int, category varchar(20), primary key(Variety_number), foreign key(Variety_number) references drug_varieties(Variety_number) on delete cascade);

NESTED:
select Disorder_number from disorders where Disorder_number in (select rno from cured_by where cured_by.rno=5);
select name from rehabs where rno in (select Disorder_number from cured_by where cured_by.Disorder_number>2);
select * from treatment where facilitates in (select rno from rehabs where name='Kripa Revival Center');
select Country from laws where Name in (select Name from restricts_to);
select Country from laws where Name in (select Name from restricts_to where Variety_number<5);

SET operations:
select Country from agency where Games='Football' union select Country from laws where Year_of_enforcement>2000;
select distinct Caused_by from disorders where Caused_by in (select Category from drug_varieties);

GROUP BY:
select count(cumulative_cases),transmission_classification from covid_19 group by transmission_classification;
select country,coutn(*) from covid_19 group by country;

ORDER BY:
select variety_number,example_1 from drug_varieties order by variety_number;

HAVING:
select * from treatment having cost>1000;

CHECK:
alter table covid_19 add check(cumulative_cases>=20000);

EXISTS and NOT EXISTS:
select adress from patient where not exists(select location from rehabs where patient.adress=rehabs.location);
select vaccine_name from covid_19 where exists(select vaccine_name from updates_on);

Aggregate functions:
select count(distinct City) from agency where Games='All';
select sum(cost) from treatment;
select max(cumulative_cases) as MAX_CASES from covid_19;
select min(cumulative_cases) as MIN_CASES from covid_19;
select avg(cumulative_cases) as AVG_CASES from covid_19;

Like, Between:
select Substance,Sweat from detected where Sweat like '%days';
select name,contact_no from rehabs where contact_no like '9_________';
select name,age from patient where age between 18 and 50;

Correlated queries:
select name from patient where age>30 and exists (select * from patient);
select country from covid_19 where cumulative_cases > (select avg(cumulative_cases) from covid_19 where vaccine_name=vaccine_name);  

Views:
create view patient_rehab_treatment(Patient_Name, Rehab_Name,Treatment_Name,Treatment_Choice) as select p.name, r.name, t.name, t.choice from patient as p, rehabs as r, treatment as t where p.books=r.rno and p.requires=t.name;

Triggers:
create trigger upcase before insert on patient for each row set new.Name=upper(new.Name);

Stored Procedures:
create procedure SelectAllRehabs() select * from rehabs go;
call SelectAllRehabs;

RELATIONAL ALGEBRAIC QUERIES:
select * from covid_19 where country="india";
select distinct Country,Name from laws; 
select Country from agency where Games='Football' union select Country from laws where Year_of_enforcement>2000;
select id,name,gender,age,requires from patient left join treatment on patient.requires=treatment.name;
select adress from patient where not exists(select location from rehabs where patient.adress=rehabs.location);
select rehabs.rno,rehabs.name, cured_by.disorder_number,cured_by.rno from rehabs cross join cured_by;
select A.Games as Sports, A.Lab_Head as Laboratory_Incharge, A.Address as Location, A.doping as Tests from agency as A where A.Games="Football";